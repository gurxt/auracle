/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 .\public\asterioid-draco.glb --transform
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { MathUtils } from 'three'

export function Asteroid(props) {
  const { nodes, materials } = useGLTF('/asterioid-draco-transformed.glb')
  const [ delta, setDelta ] = useState(0.01)
  const ref = useRef()

  useFrame(() => {
    ref.current.position.y = MathUtils.lerp(ref.current.position.y, ref.current.position.y + delta, 0.015)

    if (ref.current.position.y > -2.1)
      setDelta(-0.01)
    if (ref.current.position.y < -2.3)
      setDelta(+0.01)
  })

  return (
    <group {...props} dispose={null}>
      <mesh ref={ref} geometry={nodes.Asterioid_Body.geometry} material={materials['Asteroid Rock']} position={[0, -2.2, 0.097]} scale={4} />
    </group>
  )
}

useGLTF.preload('/asterioid-draco-transformed.glb')
