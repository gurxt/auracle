/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 .\public\solar-system-draco.glb --transform
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export function SolarSystem(props) {
  const { nodes, materials } = useGLTF('/solar-system-draco-transformed.glb')
  const earthRef = useRef()
  const mercuryRef = useRef()
  const venusRef = useRef()

  useFrame(() => {
    console.log(earthRef) 
    earthRef.current.rotation.y += 0.0001
    mercuryRef.current.rotation.y += 0.0003
    venusRef.current.rotation.y += 0.0002
  })

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Sun.geometry} material={materials.Sun} position={[-0.73, 1.836, -412.051]} rotation={[0.363, -0.244, 0.092]} scale={54.366} />
      <mesh ref={mercuryRef} geometry={nodes.Mercury.geometry} material={materials['Mercury.001']} position={[-5.681, 3.603, -424.541]} rotation={[0.363, -0.244, 0.092]} scale={-6.639} />
      <mesh ref={venusRef} geometry={nodes.Venus.geometry} material={materials.Venus} position={[9.187, 1.628, -407.752]} rotation={[0.363, -0.244, 0.092]} scale={6.063} />
      <mesh ref={earthRef} geometry={nodes.Earth.geometry} material={materials.Earth} position={[6.128, 13.474, -426.324]} rotation={[0.363, -0.244, 0.092]} scale={10.641} />
    </group>
  )
}

useGLTF.preload('/solar-system-draco-transformed.glb')
