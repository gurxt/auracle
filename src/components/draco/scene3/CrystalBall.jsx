/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.4 .\public\crystal-ball-draco.glb --transform scale: [0.25, 0.25, 0.25]
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { Color, MathUtils, Vector3 } from 'three'

const vec = new Vector3()
const white = new Color('white')
const black = new Color('black')

export function CrystalBall(props) {
  const { nodes, materials } = useGLTF('/crystal-ball-draco-transformed.glb')
  const ref = useRef()

  useFrame(() => {
    ref.current.position.y = MathUtils.lerp(ref.current.position.y, -1, 0.025)
  })

  return (
    <group {...props} dispose={null}>
      <mesh ref={ref} geometry={nodes.Icosphere.geometry} material={materials.chrome} position={[-0.12, -2, 2.5]} scale={0.5} />
    </group>
  )
}

useGLTF.preload('/crystal-ball-draco-transformed.glb')
