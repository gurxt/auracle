/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 .\public\glass-cards-draco.glb --transform
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useLoader } from '@react-three/fiber'
import { TextureLoader } from 'three'
import * as THREE from 'three'

export function GlassCards(props) {
  const { nodes, materials } = useGLTF('/glass-cards-draco-transformed.glb')

//   const random = useLoader(TextureLoader, `../src/assets/tarots/${url}`)
//   const back_card = useLoader(TextureLoader, '../src/assets/tarots/back.jpg')
//   const card = new THREE.MeshBasicMaterial({ map: random })
//   const back = new THREE.MeshBasicMaterial({ map: back_card })
//   const black = new THREE.MeshBasicMaterial({ color: 'black' })

//   return (
//     <mesh 
//       ref={ref} 
//       material={[ black, black, black, black, back, card, black, black ]}
//       name="meshBasicMaterial"
//       rotation={[0, rotation, 0]} 
//       position={[x, y, z]}
//       onClick={() => {setSelected(!selected); if (!cardClicked[0]) handleCardClicked(0)}}
//     >
//       <boxGeometry args={[2.5, 3.9, 0.05]} />
//     </mesh>
//   )
// }
  const card_name = useLoader(TextureLoader, '../src/assets/tarots/0_TheFool.jpg')
  const card = new THREE.MeshBasicMaterial({ map: card_name })
  const glass = materials['Cracked glass']
  return (
    <group>
  
    </group>
  )
}

useGLTF.preload('/glass-cards-draco-transformed.glb')
