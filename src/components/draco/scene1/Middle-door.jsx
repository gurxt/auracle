/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.4 .\public\middle-door.glb --transform scale [0.25, 0.25, 0.25]
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { MathUtils } from 'three'

export function MiddleDoor(props) {
  const { nodes, materials } = useGLTF('/middle-door-transformed.glb')
  const ref = useRef()
  const [hovered, setHovered] = useState(false)
  const [selected, setSelected] = useState(false)

  useFrame(() => {
    ref.current.position.z = hovered
      ? MathUtils.lerp(ref.current.position.z, ref.current.position.z - (ref.current.position.z + 1) % 1, 0.025)
      : MathUtils.lerp(ref.current.position.z, -8.927, 0.025)
  })
  return (
    <group {...props} dispose={null}>
      <mesh 
        ref={ref}
        onPointerDown={() => {
          setSelected(!selected)
        }}
        onPointerOver={() => setHovered(true)}
        onPointerOut={() => setHovered(false)} 
        geometry={nodes.StoneGateway003.geometry} material={materials['monastery_stone_floor.003']} position={[-0.02, 2.529, -8.927]} rotation={[-Math.PI / 2, 0, 0.033]} scale={-1} />
    </group>
  )
}

useGLTF.preload('/middle-door-transformed.glb')
