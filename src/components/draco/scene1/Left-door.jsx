/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.4 .\public\left-door.glb --transform scale [0.25, 0.25, 0.25]
*/

import React, { useRef, useState } from 'react'
import { useGLTF, useSelect } from '@react-three/drei'
import { Color, MathUtils, Vector3 } from 'three'
import { useFrame } from '@react-three/fiber'
import { setCurrentScene, setSceneHistory } from '../../../slices/scene'
import { selectSceneHistory } from '../../../slices/scene'
import { useDispatch, useSelector } from 'react-redux'

const vec = new Vector3()
const black = new Color('black')
const white = new Color('white')

export function LeftDoor(props) {
  const { nodes, materials } = useGLTF('/left-door-transformed.glb')
  const doorRef = useRef()
  const mirrorRef = useRef()
  const [hovered, setHovered] = useState(false)
  const [selected, setSelected] = useState(false)
  const dispatch = useDispatch()
  const history = useSelector(selectSceneHistory)

  useFrame(({ camera }) => {
    mirrorRef.current.children[0].material.color.lerp(hovered ? black : white, 0.025)
    
    if (selected) {
      vec.set(-4.918, 0, -7.44)
      camera.position.lerp(vec, 0.015)
    }
  })

  const handleClick = () => {
    setTimeout(() => {
      dispatch(setCurrentScene(2))
      if (!history.some(scene => scene.sceneNumber === 2))
        dispatch(setSceneHistory([...history, { name: 'The Auracle', sceneNumber: 2 }]))
    }, 1500)
  }

  return (
    <group 
      onClick={() => { setSelected(true) ; handleClick()}}
      onPointerOver={() => setHovered(true)}
      onPointerOut={() => setHovered(false)}
      {...props} dispose={null}>
      <mesh geometry={nodes.StoneGateway002.geometry} material={materials['monastery_stone_floor.002']} position={[-4.658, 2.529, -7.247]} rotation={[-Math.PI / 2, 0, 0.816]} scale={-1} />
      <mesh geometry={nodes.StoneGateway002.geometry} material={materials['monastery_stone_floor.002']} position={[-4.658, 2.529, -7.247]} rotation={[-Math.PI / 2, 0, 0.816]} scale={-1} />
      <group ref={mirrorRef} position={[-4.606, -0.625, -7.119]} rotation={[-0.004, 0.833, -0.024]} scale={6.655}>
        <mesh geometry={nodes.mesh003.geometry} material={materials.PaletteMaterial001} />
        <mesh geometry={nodes.mesh003_1.geometry} material={materials.PaletteMaterial002} />
      </group>
    </group>
  )
}

useGLTF.preload('/left-door-transformed.glb')

